name: Build-Test-Deploy to Vercel

on:
  push:
    branches: [main]                 # push to main -> production deploy
  pull_request:
    types: [opened, synchronize, reopened]  # PRs -> preview deploys

jobs:
  build-test-deploy:
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci
        shell: powershell

      - name: Run tests
        run: npm test
        shell: powershell

      - name: Build project
        run: npm run build
        shell: powershell

      - name: Install Vercel CLI
        run: npm install -g vercel@25.1.0
        shell: powershell

      - name: Verify Vercel token
        shell: powershell
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          Write-Host "vercel whoami (verifies token)..."
          vercel whoami --token $env:VERCEL_TOKEN

      # Preview deploy for pull requests
      - name: Deploy Preview to Vercel (Pull Request)
        if: github.event_name == 'pull_request'
        shell: powershell
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          Write-Host "Deploying preview for PR $($env:GITHUB_HEAD_REF) (ref: $env:GITHUB_REF)..."
          vercel --token $env:VERCEL_TOKEN --previews --confirm

      # Production deploy for pushes to main
      - name: Deploy to Vercel (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        shell: powershell
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          Write-Host "Deploying production (main branch)..."
          vercel --prod --token $env:VERCEL_TOKEN --confirm
