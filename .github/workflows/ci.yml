name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test-and-lint:
    name: Test, Lint & Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f "requirements.txt" ]; then pip install -r requirements.txt; fi

      - name: Lint (flake8)
        run: |
          if python -c "import pkgutil, sys; print(pkgutil.find_loader('flake8'))" | grep -q "None"; then
            echo "flake8 not installed; skipping lint (add to dev deps)"
          else
            flake8 || true
          fi

      - name: Security scan (bandit)
        run: |
          if python -c "import pkgutil; print(pkgutil.find_loader('bandit'))" | grep -q "None"; then
            echo "bandit not installed; skipping"
          else
            bandit -r . -f json -o reports/bandit.json || true
          fi

      - name: Run tests (pytest) and collect coverage
        run: |
          mkdir -p reports
          if python -c "import pkgutil; print(pkgutil.find_loader('pytest'))" | grep -q "None"; then
            echo "pytest not installed; skipping tests"
          else
            pytest --junitxml=reports/junit.xml --cov=./ --cov-report=xml:reports/coverage.xml || true
          fi

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: ci-reports
          path: reports/
