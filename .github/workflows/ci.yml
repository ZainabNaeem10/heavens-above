name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
 test-and-lint-windows:
    name: Test, Lint & Coverage (Windows)
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          if [ -f "requirements.txt" ]; then
            python -m pip install --upgrade pip
            pip install -r requirements.txt
          elif [ -f "pyproject.toml" ]; then
            pip install build
            pip install .
          else
            echo "No requirements.txt or pyproject.toml found â€” adjust CI."
          fi

      - name: Lint (flake8)
        run: |
          if command -v flake8 >/dev/null 2>&1; then
            flake8 || true
          else
            echo "flake8 not installed; skipping (add flake8 to dev deps)."
          fi

      - name: Static security scan (bandit)
        run: |
          if command -v bandit >/dev/null 2>&1; then
            bandit -r . -f simple || true
          else
            echo "bandit not installed; skipping (add bandit to dev deps)."
          fi

      - name: Run tests (pytest) and collect coverage
        run: |
          mkdir -p reports
          if command -v pytest >/dev/null 2>&1; then
            pytest --junitxml=reports/junit.xml --cov=./ --cov-report=xml:reports/coverage.xml || true
          else
            echo "pytest not installed; skipping tests (add pytest to dev deps)."
          fi

      - name: Upload test reports & coverage
        uses: actions/upload-artifact@v4
        with:
          name: ci-reports
          path: reports/

      - name: Show brief results
        run: |
          echo "Artifacts uploaded: reports/"
