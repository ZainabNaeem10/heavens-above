name: CI (Windows)

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  test-and-lint-windows:
    name: Test, Lint & Coverage (Windows)
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path -Path "requirements.txt") {
            pip install -r requirements.txt
          } else {
            Write-Host "No requirements.txt found; installing dev-tools"
            pip install pytest pytest-cov flake8 bandit
          }

      - name: Lint (flake8)
        shell: pwsh
        run: |
          if (-not (Get-Command flake8 -ErrorAction SilentlyContinue)) {
            Write-Host "flake8 not found; installing..."
            pip install flake8
          }
          flake8   # <-- Will exit non-zero on lint errors and fail the job

      - name: Security scan (bandit)
        shell: pwsh
        run: |
          if (-not (Get-Command bandit -ErrorAction SilentlyContinue)) {
            pip install bandit
          }
          New-Item -ItemType Directory -Path reports -Force | Out-Null
          bandit -r . -f json -o reports\bandit.json
          # bandit may exit non-zero on issues; adjust if you want non-failing scan

      - name: Run tests (pytest) and collect coverage
        shell: pwsh
        run: |
          if (-not (Get-Command pytest -ErrorAction SilentlyContinue)) {
            pip install pytest pytest-cov
          }
          New-Item -ItemType Directory -Path reports -Force | Out-Null
          pytest --junitxml=reports\junit.xml --cov=./ --cov-report=xml:reports\coverage.xml

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: ci-reports-windows
          path: reports/
