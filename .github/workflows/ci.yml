name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test-and-lint-windows:
    name: Test, Lint & Coverage (Windows)
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") {
            pip install -r requirements.txt
          } elseif (Test-Path "pyproject.toml") {
            pip install build
            pip install .
          } else {
            Write-Host "No requirements.txt or pyproject.toml found â€” adjust CI."
          }

      - name: Lint (flake8)
        run: |
          if (Get-Command flake8 -ErrorAction SilentlyContinue) {
            flake8
          } else {
            Write-Host "flake8 not installed; skipping lint (add to dev dependencies)."
          }

      - name: Static security scan (bandit)
        run: |
          if (Get-Command bandit -ErrorAction SilentlyContinue) {
            bandit -r . -f simple
          } else {
            Write-Host "bandit not installed; skipping security scan (add to dev dependencies)."
          }

      - name: Run tests (pytest) and collect coverage
        run: |
          if (-not (Test-Path "reports")) { New-Item -ItemType Directory -Path "reports" | Out-Null }
          if (Get-Command pytest -ErrorAction SilentlyContinue) {
            pytest --junitxml=reports/junit.xml --cov=./ --cov-report=xml:reports/coverage.xml
          } else {
            Write-Host "pytest not installed; skipping tests (add to dev dependencies)."
          }

      - name: Upload test reports & coverage
        uses: actions/upload-artifact@v4
        with:
          name: ci-reports
          path: reports/

      - name: Show brief results
        run: |
          Write-Host "Artifacts uploaded: reports/"
